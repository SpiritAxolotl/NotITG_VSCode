---@diagnostic disable: deprecated, need-check-nil

-- actor types to recognise in xml
-- There are more, but these are the ones common in modding
local types = {
	Actor = true,
	ActorFrame = true,
	ActorFrameTexture = true,
	ActorProxy = true,
	ActorScroller = true,
	ActorSound = true,
	BitmapText = true,
	Course = true,
	DifficultyMeter = true,
	FadingBanner = true,
	HelpDisplay = true,
	Model = true,
	Player = true,
	Polygon = true,
	ScreenGameplay = true,
	Sprite = true,
	Quad = true,
}

local loadstring = loadstring or load
local function convert_file_to_nitg_lua_declarations(filename, outfilename)
	local out = io.open(outfilename, "w")

	local strings, i = {}, 0

	local contents = io.open(filename):read("*a"):gsub("\".-\"", function(str)
		i = i + 1
		strings[tostring(i)] = str:gsub("\n", "\\n"):sub(2, -2)
		return "\"" .. i .. "\""
	end)
	local headers = {}

	out:write("--- Generated by a script\n")
	out:write("---@meta _\n")
	out:write("---@diagnostic disable: undefined-global, lowercase-global, missing-fields\n")

		for tag, properties in contents:gsub("<!%-%-.-%-%->",""):gmatch("[^<]*<([^ \n>=]+) *([^>]-) */?>\n?") do
		local type = types[tag] and tag or "Actor"
		local name = nil
		for prop, id in properties:gmatch("([^=]-) *= *\"(%d+)\" *") do
			local body = strings[id]
			if prop == "Type" then type = body end
			if prop == "Name" or prop == "Var" then name = body end
			if prop:sub(-7) == "Command" then
				name = name or body:match("(%w+) ?= ?self")
			end
		end
		if name and loadstring(name.." = {}") then
			local count = #name-#name:gsub("[.[]","")
			if count > 0 then
				local header = name
					:gsub("%.", " = {")
					:gsub("(%b[])", " = {%1")
					:gsub("{[^{]*$","{")
					..("}"):rep(count)
					.."\n"
				if not headers[header] and loadstring(header) then
					out:write(header)
					headers[header] = true
				end
			end
			out:write("---@type "..type.."\n"..name.." = {}\n")
		end
	end

end

local input = "lua/layout.xml"
local output = ".vscode/docs/mods/layout.lua"

for i,v in ipairs(arg) do
	if v == "-in" and arg[i+1] ~= nil then
		input = arg[i+1]
	end
	if v == "-out" and arg[i+1] ~= nil then
		output = arg[i+1]
	end
end

convert_file_to_nitg_lua_declarations(input, output)
